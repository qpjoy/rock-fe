@startuml
<style>
package {
    Padding 0
    Margin 0
}

</style>

left to right direction

skinparam classAttributeIconSize 0
skinparam packageStyle rectangle
' skinparam padding 0
' skinparam linetype polyline


class FurnitureFactory {
    +getFurniture(string): IChair
}

package "Client Application" as clientApplication {}


clientApplication o-left-> FurnitureFactory


package " " as factoryPicker {
    together subLeft {
        class ChairFactory {
            +getChair(type): IChair
        }

        class TableFactory {
            +getTable(string): ITable
        }

        ChairFactory -[hidden]left- TableFactory : \r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r
    }


    together subRight {
        package "Subclasses Implementing a common Interface" as subClasses {
            together tConcreteProducts{
                class SmallChair {
                    +height: number
                    +width: number
                    +depth: number
                }

                class MediumChair {
                    +height: number
                    +width: number
                    +depth: number
                }

                class BigChair {
                    +height: number
                    +width: number
                    +depth: number
                }

                SmallChair -[hidden]left- MediumChair
                MediumChair -[hidden]left- BigChair
            }

            together tProduct{
                interface IChair {
                    +getDimensions(): dimension
                }

                class Chair {
                    +height: number
                    +width: number
                    +depth: number
                    +getDimensions(): dimension
                }
            }

            Chair -[dashed]right-|> IChair : \r\r
            MediumChair -[hidden]up- Chair
            SmallChair -[dashed]left-|> Chair
            MediumChair -[dashed]up-|> Chair
            BigChair -[dashed]right-|> Chair
        }

        package "Subclasses Implementing a common Interface" as subClasses2 {
            together tConcreteTables{
                class SmallTable{
                    +name: string
                    +height: number
                    +width: number
                    +depth: number
                }

                class MediumTable {
                    +name: string
                    +height: number
                    +width: number
                    +depth: number
                }

                class BigTable {
                    +name: string
                    +height: number
                    +width: number
                    +depth: number
                }

                SmallTable -[hidden]left- MediumTable
                MediumTable -[hidden]left- BigTable
            }

            together tTable{
                interface ITable {
                    +getDimensions(): dimension
                }

                class Table {
                    +height: number
                    +width: number
                    +depth: number
                    +getDimensions(): dimension
                }
            }

            Table -[dashed]right-|> ITable : \r\r
            MediumTable -[hidden]up- Table
            SmallTable -[dashed]left-|> Table
            MediumTable -[dashed]up-|> Table
            BigTable -[dashed]right-|> Table
        }

        ' subClasses ---[hidden]left- subClasses2
    }

    ChairFactory o-down-> IChair
    TableFactory o-down-> ITable
}

' FurnitureFactory -down--- factoryPicker
FurnitureFactory o-down-> ChairFactory
FurnitureFactory o-down-> TableFactory

' FurnitureFactory o-left-> ChairFactory
' FurnitureFactory o-right-> TableFactory